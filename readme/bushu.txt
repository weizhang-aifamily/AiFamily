以下是 **Windows本地开发环境 + 云服务器生产环境** 的极简搭建指南，分步骤实现无缝衔接：

---

### **第一部分：Windows本地环境搭建**

#### 1. 安装MySQL（本地测试用）
- **推荐方案**：直接安装 [XAMPP](https://www.apachefriends.org/)（含MySQL+PHPMyAdmin）
  - 下载安装包 → 只勾选 `MySQL` 和 `PHPMyAdmin`
  - 安装后启动XAMPP控制面板 → 点击MySQL的`Start`
  - 测试连接：
    ```bash
    mysql -u root -p
    # 密码为空直接回车
    ```

#### 2. 安装Python环境
- **步骤**：
  1. 从 [Python官网](https://www.python.org/downloads/) 下载最新版（勾选 `Add to PATH`）
  2. 验证安装：
     ```cmd
     python --version
     pip --version
     ```
  3. 安装必要库：
     ```cmd
     pip install flask mysql-connector-python
     ```

#### 3. 创建项目结构
```bash
C:
├── MY_PROJECT/
│   ├── app.py       # Flask后端
│   ├── templates/   # HTML文件
│   │   └── index.html
│   ├── static/      # CSS/JS
│   └── .env         # 环境变量
```

#### 4. 编写基础代码
- **`app.py`**（Flask后端）：
```python
from flask import Flask, render_template
import mysql.connector
import os
from dotenv import load_dotenv

load_dotenv()
app = Flask(__name__)

# 数据库配置
db = mysql.connector.connect(
    host="localhost",
    user="root",
    password="",
    database="test"
)

@app.route('/')
def home():
    cursor = db.cursor()
    cursor.execute("SELECT * FROM items")
    data = cursor.fetchall()
    return render_template('index.html', items=data)

if __name__ == '__main__':
    app.run(debug=True)
```

- **`templates/index.html`**（前端）：
```html
<!DOCTYPE html>
<html>
<head>
    <title>My App</title>
</head>
<body>
    <h1>数据列表：</h1>
    <ul>
        {% for item in items %}
        <li>{{ item[1] }}</li>  <!-- 假设第二列是名称 -->
        {% endfor %}
    </ul>
</body>
</html>
```

#### 5. 启动本地服务
```cmd
cd C:\MY_PROJECT
python app.py
```
访问 `http://localhost:5000` 即可测试

---

### **第二部分：云服务器生产环境部署**

#### 1. 服务器基础配置
```bash
# 登录服务器后执行
sudo apt update
sudo apt install python3-pip mysql-server nginx -y
sudo mysql_secure_installation  # 设置MySQL密码
```

#### 2. 传输项目文件
- **方法A：用WinSCP（可视化工具）**
  1. 下载 [WinSCP](https://winscp.net/)
  2. 连接服务器 → 拖拽本地 `MY_PROJECT` 文件夹到服务器的 `/home/ubuntu`

- **方法B：命令传输**（PowerShell执行）：
```powershell
scp -r C:\MY_PROJECT ubuntu@你的服务器IP:/home/ubuntu/
```

#### 3. 服务器环境配置
```bash
# 在服务器上操作
cd /home/ubuntu/MY_PROJECT
pip3 install flask mysql-connector-python gunicorn

# 修改app.py中的数据库配置
nano app.py
```
```python
# 修改为服务器数据库配置
db = mysql.connector.connect(
    host="localhost",
    user="root",
    password="你的MySQL密码",
    database="test"
)
```

#### 4. 启动服务
```bash
# 用Gunicorn运行
gunicorn -w 4 -b 0.0.0.0:5000 app:app

# 或用PM2守护进程（需先安装Node.js）
sudo npm install -g pm2
pm2 start "gunicorn -w 4 -b 0.0.0.0:5000 app:app" --name "myapp"
```

#### 5. 配置Nginx
```bash
sudo nano /etc/nginx/sites-available/myapp
```
粘贴：
```nginx
server {
    listen 80;
    server_name 你的域名或IP;

    location / {
        proxy_pass http://localhost:5000;
        proxy_set_header Host $host;
    }

    location /static {
        alias /home/ubuntu/MY_PROJECT/static;
    }
}
```
启用配置：
```bash
sudo ln -s /etc/nginx/sites-available/myapp /etc/nginx/sites-enabled
sudo nginx -t && sudo systemctl restart nginx
```

---

### **第三部分：数据库同步**

#### 1. 导出本地数据（Windows命令提示符）：
```cmd
cd C:\xampp\mysql\bin
mysqldump -u root -p test > C:\backup.sql
# 密码为空直接回车
```

#### 2. 导入到服务器：
```powershell
scp C:\backup.sql ubuntu@你的服务器IP:/tmp/
```
然后在服务器执行：
```bash
mysql -u root -p test < /tmp/backup.sql
```

---

### **常用维护命令**

| 场景 | Windows本地 | 云服务器 |
|------|-------------|----------|
| **启动服务** | `python app.py` | `pm2 start myapp` |
| **查看日志** | 直接看CMD窗口 | `pm2 logs` |
| **更新代码** | 修改后重启Flask | `git pull && pm2 restart myapp` |
| **数据库管理** | 访问 `http://localhost/phpmyadmin` | 使用 `mysql -u root -p` |

---

### **避坑指南**
1. **Windows换行符问题**：
   - 在服务器执行：`sed -i 's/\r$//' app.py` 清除`^M`符号
2. **防火墙设置**：
   - 阿里云/腾讯云控制台需放行80、5000端口
3. **调试技巧**：
   - 本地开发时用 `app.run(debug=True)`
   - 服务器上用 `pm2 logs` 查看错误

按照这个流程，你可以：
1. 在Windows轻松开发调试
2. 一键同步到云服务器
3. 保持数据库一致性

需要哪部分更详细的演示？我可以提供截图或视频指导！ ??