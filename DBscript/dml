-- 1. 确保表结构存在（如果表不存在则创建）
CREATE TABLE IF NOT EXISTS family_member (
  `member_id` int(11) NOT NULL AUTO_INCREMENT,
  `family_id` int(11) NOT NULL,
  `name` varchar(50) NOT NULL,
  `gender` tinyint(1) NOT NULL,
  `birth_date` date NOT NULL,
  `relation` varchar(20) NOT NULL,
  `is_primary` tinyint(1) DEFAULT 0,
  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`member_id`)
);

CREATE TABLE IF NOT EXISTS health_metric_type (
  `metric_id` int(11) NOT NULL AUTO_INCREMENT,
  `metric_code` varchar(50) NOT NULL,
  `metric_name` varchar(50) NOT NULL,
  `unit` varchar(20) NOT NULL,
  `normal_range` varchar(100) DEFAULT NULL,
  `is_system` tinyint(1) DEFAULT 1,
  PRIMARY KEY (`metric_id`),
  UNIQUE KEY `uk_code` (`metric_code`)
);

CREATE TABLE IF NOT EXISTS member_health_metric (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `member_id` int(11) NOT NULL,
  `metric_id` int(11) NOT NULL,
  `metric_value` decimal(10,2) NOT NULL,
  `measure_time` datetime NOT NULL,
  `data_source` varchar(20) DEFAULT 'MANUAL',
  PRIMARY KEY (`id`),
  FOREIGN KEY (`member_id`) REFERENCES family_member (`member_id`),
  FOREIGN KEY (`metric_id`) REFERENCES health_metric_type (`metric_id`)
);

CREATE TABLE IF NOT EXISTS foods (
  `food_id` int(11) NOT NULL AUTO_INCREMENT,
  `food_name` varchar(50) NOT NULL,
  `calories` int DEFAULT NULL,
  `sodium` int DEFAULT NULL,
  PRIMARY KEY (`food_id`)
);

CREATE TABLE IF NOT EXISTS food_tags (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `food_id` int(11) NOT NULL,
  `tag_name` varchar(30) NOT NULL,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`food_id`) REFERENCES foods (`food_id`)
);

CREATE TABLE IF NOT EXISTS member_food_log (
  `log_id` int(11) NOT NULL AUTO_INCREMENT,
  `member_id` int(11) NOT NULL,
  `food_id` int(11) NOT NULL,
  `consumed_at` datetime NOT NULL,
  `servings` float DEFAULT 1,
  PRIMARY KEY (`log_id`),
  FOREIGN KEY (`member_id`) REFERENCES family_member (`member_id`),
  FOREIGN KEY (`food_id`) REFERENCES foods (`food_id`)
);


-- 3. 插入家庭成员
INSERT INTO family_member
(family_id, name, gender, birth_date, relation, is_primary)
VALUES
(1, '小明', 1, DATE_SUB(CURDATE(), INTERVAL 8 YEAR), '儿子', 0);

SET @member_id = LAST_INSERT_ID();

-- 4. 插入健康指标类型（忽略已存在的记录）
INSERT IGNORE INTO health_metric_type
(metric_code, metric_name, unit, normal_range, is_system)
VALUES
('HEIGHT', '身高', 'cm', NULL, 1),
('WEIGHT', '体重', 'kg', NULL, 1),
('BMI', 'BMI指数', '', '18.5-24', 1),
('ENERGY', '能量', 'kcal', '1800', 1),
('PROTEIN', '蛋白质', 'g', '60', 1),
('CALCIUM', '钙', 'mg', '800', 1),
('IRON', '铁', 'mg', '10', 1),
('ZINC', '锌', 'mg', '8', 1),
('SODIUM', '钠', 'mg', '1500', 1);

-- 5. 插入健康指标数据
INSERT INTO member_health_metric
(member_id, metric_id, metric_value, measure_time)
SELECT
    @member_id,
    (SELECT metric_id FROM health_metric_type WHERE metric_code = 'HEIGHT'),
    130,
    DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 7) DAY)
UNION ALL SELECT
    @member_id,
    (SELECT metric_id FROM health_metric_type WHERE metric_code = 'WEIGHT'),
    28,
    DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 7) DAY)
UNION ALL SELECT
    @member_id,
    (SELECT metric_id FROM health_metric_type WHERE metric_code = 'BMI'),
    ROUND(28/(1.3*1.3),1),
    DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 7) DAY)
UNION ALL SELECT
    @member_id,
    (SELECT metric_id FROM health_metric_type WHERE metric_code = 'ENERGY'),
    1450,
    DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 7) DAY)
UNION ALL SELECT
    @member_id,
    (SELECT metric_id FROM health_metric_type WHERE metric_code = 'PROTEIN'),
    48,
    DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 7) DAY)
UNION ALL SELECT
    @member_id,
    (SELECT metric_id FROM health_metric_type WHERE metric_code = 'CALCIUM'),
    650,
    DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 7) DAY)
UNION ALL SELECT
    @member_id,
    (SELECT metric_id FROM health_metric_type WHERE metric_code = 'IRON'),
    8,
    DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 7) DAY)
UNION ALL SELECT
    @member_id,
    (SELECT metric_id FROM health_metric_type WHERE metric_code = 'ZINC'),
    6,
    DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 7) DAY)
UNION ALL SELECT
    @member_id,
    (SELECT metric_id FROM health_metric_type WHERE metric_code = 'SODIUM'),
    2200,
    DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 7) DAY);

-- 6. 插入食物数据
INSERT INTO foods (food_name, calories, sodium) VALUES
('炸鸡', 450, 1200),
('薯条', 340, 800),
('白米饭', 200, 5);
